import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart' show LaunchMode, canLaunchUrl, launchUrl;

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> with SingleTickerProviderStateMixin {
  final List<Map<String, String>> destinations = [
    {
      "image": "assets/images/collegeTour.jpg",
      "title": "Why you should reconsider The Inca Trail, Peru Trip",
    },
    {
      "image": "assets/images/TNtour.jpg",
      "title": "Explore the heart of South India with our curated travel packages – where every journey is a story and every destination, a dream!",
    },
    {
      "image": "assets/images/taxi.png",
      "title": "10 Facts you didn’t know about The Blue Hole, Belize",
    },
  ];

  late AnimationController _controller;
  late Animation<double> _animation;
  bool isDrawerOpen = false;
  String? hoveredNavItem;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: const Duration(milliseconds: 300),
      vsync: this,
    );
    _animation = CurvedAnimation(parent: _controller, curve: Curves.easeInOut);
  }

  void toggleDrawer() {
    setState(() {
      isDrawerOpen = !isDrawerOpen;
      isDrawerOpen ? _controller.forward() : _controller.reverse();
    });
  }

  void launchWhatsApp() async {
    const String phoneNumber = "7094523949"; 
    final Uri url = Uri.parse("https://wa.me/$phoneNumber");
    if (await canLaunchUrl(url)) {
      await launchUrl(url, mode: LaunchMode.externalApplication);
    } else {
      debugPrint("Could not launch WhatsApp");
    }
  }

  void makeCall() async {
    const String phoneNumber = "tel:7094523949"; 
    final Uri url = Uri.parse(phoneNumber);
    if (await canLaunchUrl(url)) {
      await launchUrl(url);
    } else {
      debugPrint("Could not make the call");
    }
  }

  @override
  Widget build(BuildContext context) {
    double screenWidth = MediaQuery.of(context).size.width;
    bool isMobile = screenWidth < 600;
    bool isTablet = screenWidth >= 600 && screenWidth < 1024;
    bool isDesktop = screenWidth >= 1024;

    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        elevation: 0,
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            const Text(
              "THANSIRA\nTRAVELS",
              style: TextStyle(
                fontFamily: 'poorStory',
                fontSize: 20,
                fontWeight: FontWeight.bold,
                letterSpacing: 2,
                color: Colors.white,
              ),
            ),
            if (!isMobile)
              Row(
                children: ["Home", "About Us", "Contact Us"]
                    .map(
                      (navItem) => MouseRegion(
                        onEnter: (_) => setState(() {
                          hoveredNavItem = navItem;
                        }),
                        onExit: (_) => setState(() {
                          hoveredNavItem = null;
                        }),
                        child: Padding(
                          padding: const EdgeInsets.symmetric(horizontal: 12),
                          child: AnimatedDefaultTextStyle(
                            duration: const Duration(milliseconds: 200),
                            style: TextStyle(
                              fontSize: 16,
                              fontWeight: FontWeight.w600,
                              color: hoveredNavItem == navItem
                                  ? Colors.blue.shade300
                                  : Colors.white,
                            ),
                            child: Text(navItem),
                          ),
                        ),
                      ),
                    )
                    .toList(),
              ),
            if (isMobile)
              IconButton(
                icon: Icon(
                  isDrawerOpen ? Icons.close : Icons.menu,
                  color: Colors.white,
                ),
                onPressed: toggleDrawer,
              ),
          ],
        ),
      ),
      body: GestureDetector(
        onHorizontalDragUpdate: (details) {
          if (details.primaryDelta! > 20) {
            toggleDrawer();
          } else if (details.primaryDelta! < -20) {
            toggleDrawer();
          }
        },
        child: Stack(
          children: [
            isDesktop
                ? Row(
                    children: destinations
                        .map(
                          (destination) => Expanded(
                            child: buildDestinationCard(destination),
                          ),
                        )
                        .toList(),
                  )
                : SingleChildScrollView(
                    scrollDirection: Axis.horizontal,
                    child: Row(
                      children: destinations.map((destination) {
                        return buildDestinationCard(destination,
                            isTablet: isTablet, isMobile: isMobile);
                      }).toList(),
                    ),
                  ),
            if (isMobile) buildAnimatedDrawer(),
          ],
        ),
      ),
      floatingActionButton: Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          FloatingActionButton(
            heroTag: "whatsapp",
            backgroundColor: Colors.transparent,
            onPressed: launchWhatsApp,
            child: Image.asset("assets/images/whatsapp.png"),
          ),
          const SizedBox(height: 10),
          FloatingActionButton(
            heroTag: "call",
            backgroundColor: Colors.green,
            onPressed: makeCall,
            child: const Icon(Icons.call, color: Colors.white),
          ),
        ],
      ),
    );
  }

  Widget buildDestinationCard(Map<String, String> destination,
      {bool isTablet = false, bool isMobile = false}) {
    double cardWidth = isTablet
        ? MediaQuery.of(context).size.width / 2
        : isMobile
            ? MediaQuery.of(context).size.width
            : 300;

    return MouseRegion(
      onEnter: (_) => setState(() {}),
      onExit: (_) => setState(() {}),
      child: AnimatedContainer(
        duration: const Duration(milliseconds: 200),
        transform: Matrix4.identity()..scale(1.02),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          boxShadow: [
            BoxShadow(
              color: Colors.white.withOpacity(0.2),
              blurRadius: 5,
              spreadRadius: 2,
            ),
          ],
        ),
        margin: EdgeInsets.zero,
        width: cardWidth,
        child: Stack(
          children: [
            Positioned.fill(
              child: ClipRRect(
                borderRadius: BorderRadius.circular(0),
                child: Image.asset(destination["image"]!, fit: BoxFit.fill),
              ),
            ),
            Positioned.fill(
              child: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.topRight,
                    end: Alignment.bottomLeft,
                    colors: [
                      Colors.black.withOpacity(0.5),
                      Colors.black.withOpacity(0.5),
                    ],
                  ),
                ),
              ),
            ),
            Positioned(
              bottom: 30,
              left: 20,
              right: 20,
              child: Text(
                destination["title"]!,
                style: const TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
